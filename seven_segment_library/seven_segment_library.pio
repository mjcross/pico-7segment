.program seven_segment
.side_set 4                         ; used for digit muxing (segments are shared)

.wrap_target
    pull noblock    side 0b0111         ; TX FIFO (or X) -> OSR     and show digit 1 for 1 tick
public entry_point:
    mov x, OSR      side 0b1111         ; save display word         and blank for 1 tick
    out pins, 8     side 0b1110  [1]    ; OSR[0..7] -> digit 1      and show digit 4 for 2 ticks
    out pins, 8     side 0b1101  [1]    ; OSR[8..15] -> digit 2     and show digit 3 for 2 ticks
    out pins, 8     side 0b1011  [1]    ; OSR[16..23] -> digit 3    and show digit 2 for 2 ticks
    out pins, 8     side 0b0111         ; OSR[24..31] -> digit 4    and show digit 1 for 1 ticks
.wrap
;; 6 instructions


% c-sdk {
static inline void seven_segment_sm_init (PIO pio, uint sm, uint offset, 
                                          uint segment_pinbase, uint digit_pinbase) {
    // create new sm config
    pio_sm_config config = seven_segment_program_get_default_config (offset);

    // configure the segment digit pins
    sm_config_set_out_pins (&config, segment_pinbase, 8);
    sm_config_set_sideset_pins (&config, digit_pinbase);

    // configure the clock divider
    float div = clock_get_hz (clk_sys) * 10e-3;
    sm_config_set_clkdiv (&config, div);

    // apply the configuration to the state machine initialise the program counter
    pio_sm_init (pio, sm, offset + seven_segment_offset_entry_point, &config);

    // enable the state machine
    pio_sm_set_enabled (pio, sm, true);
}
%}
